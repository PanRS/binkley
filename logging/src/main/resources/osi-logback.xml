<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This is free and unencumbered software released into the public domain.
  ~
  ~ Please see https://github.com/binkley/binkley/blob/master/LICENSE.md.
  -->

<!-- Select with -Dlogback.configurationFile=osi-logback.xml -->
<!-- See OSI.enable() -->
<configuration debug="${logback.debug:-false}">
    <contextName>${logback.contextName:-default}</contextName>
    <!-- As an alternative to system properties -->
    <property resource="${logback.propertiesResource:-osi-logback.properties}"/>
    <!-- Default logging to 'logback.level' -->
    <if condition='Boolean.valueOf(property("logback.debug"))'>
        <then>
            <!-- Unless log.debug is set -->
            <variable name="log.level" value="debug"/>
        </then>
    </if>
    <!-- Enables %match(cond1,patt1,...,fallback) -->
    <conversionRule conversionWord="match"
                    converterClass="hm.binkley.util.logging.MatchConverter"/>
    <!-- Define timestamp for use by file appenders -->
    <timestamp key="logback.timestamp" datePattern="yyyyMMdd'T'HHmmss"/>
    <!-- Applies application custom log settings: override default with logback.includedResource -->
    <include resource="${logback.includedResource:-osi-logback-included.xml}"/>
    <!-- Sets up logging properties: override with logback.stylesResource -->
    <variable resource="${logback.stylesResource:-osi-logback-styles.properties}"/>
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <withJansi>${logback.jansi:-false}</withJansi>
        <encoder>
            <!-- Picks logging style: override with logback.style -->
            <pattern>${${logback.style:-standard}}</pattern>
        </encoder>
    </appender>
    <!-- Sets default log level: override with log.level -->
    <root level="${log.level:-WARN}">
        <!-- Sets default log output: override with logback.rootAppender -->
        <!-- If overriden, define encoder pattern as for console -->
        <appender-ref ref="${logback.rootAppender:-console}"/>
    </root>
    <if condition='Boolean.valueOf(property("logback.jmx")) || "" == property("logback.jmx")'>
        <then>
            <jmxConfigurator/>
        </then>
    </if>
    <contextListener class="ch.qos.logback.classic.jul.LevelChangePropagator">
        <resetJUL>true</resetJUL>
    </contextListener>
</configuration>
